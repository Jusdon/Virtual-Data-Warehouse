-- Attribute
IF OBJECT_ID('[MD_ATT]', 'U') IS NOT NULL
 DROP TABLE [MD_ATT]

CREATE TABLE [MD_ATT]
( 
	[ATTRIBUTE_ID]       integer  NOT NULL ,
	[ATTRIBUTE_NAME]     varchar(100)  NOT NULL 
)
go

ALTER TABLE [MD_ATT]
	ADD CONSTRAINT [PK_MD_ATT] PRIMARY KEY  CLUSTERED ([ATTRIBUTE_ID] ASC)
go

CREATE UNIQUE NONCLUSTERED INDEX [IX_MD_ATT] ON [MD_ATT]
( 
	[ATTRIBUTE_NAME]      ASC
)
go


-- Attribute mapping
IF OBJECT_ID('[MD_ATTRIBUTE_MAPPING]', 'U') IS NOT NULL
 DROP TABLE [MD_ATTRIBUTE_MAPPING]
go

CREATE TABLE [MD_ATTRIBUTE_MAPPING]
( 
	[ATTRIBUTE_MAPPING_HASH] AS 		(
				CONVERT([CHAR](32),HASHBYTES('MD5',
				ISNULL(RTRIM(CONVERT(VARCHAR(100),[TARGET_TABLE])),'NA')+'|'+
				ISNULL(RTRIM(CONVERT(VARCHAR(100),[TARGET_COLUMN])),'NA')+'|'+
				ISNULL(RTRIM(CONVERT(VARCHAR(100),[SOURCE_TABLE])),'NA')+'|'+
				ISNULL(RTRIM(CONVERT(VARCHAR(100),[SOURCE_COLUMN])),'NA')+'|' +
			    ISNULL(RTRIM(CONVERT(VARCHAR(100),[TRANSFORMATION_RULE])),'NA')+'|'
			),(2)
			)
		) PERSISTED NOT NULL ,
	[VERSION_ID]         integer  NOT NULL ,
	[SOURCE_TABLE]       varchar(100)  NULL ,
	[SOURCE_COLUMN]      varchar(100)  NULL ,
	[TARGET_TABLE]       varchar(100)  NULL ,
	[TARGET_COLUMN]      varchar(100)  NULL ,
	[TRANSFORMATION_RULE] varchar(4000)  NULL 
)
go

ALTER TABLE [MD_ATTRIBUTE_MAPPING]
	ADD CONSTRAINT [PK_MD_ATTRIBUTE_MAPPING] PRIMARY KEY  CLUSTERED ([ATTRIBUTE_MAPPING_HASH] ASC,[VERSION_ID] ASC)
go


-- Business Key Component
IF OBJECT_ID('[MD_BUSINESS_KEY_COMPONENT]', 'U') IS NOT NULL
 DROP TABLE [MD_BUSINESS_KEY_COMPONENT]
go
CREATE TABLE [MD_BUSINESS_KEY_COMPONENT]
( 
	[STAGING_AREA_TABLE_ID] integer  NOT NULL ,
	[HUB_TABLE_ID]       integer  NOT NULL ,
	[COMPONENT_ID]       integer  NOT NULL ,
	[COMPONENT_ORDER]    integer  NOT NULL ,
	[COMPONENT_VALUE]    varchar(100)  NOT NULL ,
	[COMPONENT_TYPE]     varchar(100)  NOT NULL 
)
go

ALTER TABLE [MD_BUSINESS_KEY_COMPONENT]
	ADD CONSTRAINT [PK_MD_BUSINESS_KEY_COMPONENT] PRIMARY KEY  CLUSTERED ([STAGING_AREA_TABLE_ID] ASC,[HUB_TABLE_ID] ASC,[COMPONENT_ID] ASC)
go



-- Business Key Component Part
IF OBJECT_ID('[MD_BUSINESS_KEY_COMPONENT_PART]', 'U') IS NOT NULL
 DROP TABLE [MD_BUSINESS_KEY_COMPONENT_PART]
go

CREATE TABLE [MD_BUSINESS_KEY_COMPONENT_PART]
( 
	[STAGING_AREA_TABLE_ID] integer  NOT NULL ,
	[HUB_TABLE_ID]       integer  NOT NULL ,
	[COMPONENT_ID]       integer  NOT NULL ,
	[COMPONENT_ELEMENT_ID] integer  NOT NULL ,
	[COMPONENT_ELEMENT_ORDER] integer  NULL ,
	[COMPONENT_ELEMENT_VALUE] varchar(1000)  NULL ,
	[COMPONENT_ELEMENT_TYPE] varchar(100)  NOT NULL ,
	[ATTRIBUTE_ID]       integer  NULL 
)
go

ALTER TABLE [MD_BUSINESS_KEY_COMPONENT_PART]
	ADD CONSTRAINT [PK_MD_BUSINESS_KEY_COMPONENT_PART] PRIMARY KEY  CLUSTERED ([STAGING_AREA_TABLE_ID] ASC,[HUB_TABLE_ID] ASC,[COMPONENT_ID] ASC,[COMPONENT_ELEMENT_ID] ASC)
go


-- Hub
IF OBJECT_ID('[MD_HUB]', 'U') IS NOT NULL
 DROP TABLE [MD_HUB]
go

CREATE TABLE [MD_HUB]
( 
	[HUB_TABLE_ID]       integer  NOT NULL ,
	[HUB_TABLE_NAME]     varchar(100)  NOT NULL 
)
go

ALTER TABLE [MD_HUB]
	ADD CONSTRAINT [PK_MD_HUB] PRIMARY KEY  CLUSTERED ([HUB_TABLE_ID] ASC)
go

CREATE UNIQUE NONCLUSTERED INDEX [IX_MD_HUB] ON [MD_HUB]
( 
	[HUB_TABLE_NAME]      ASC
)
go


-- Hub Link XREF
IF OBJECT_ID('[MD_HUB_LINK_XREF]', 'U') IS NOT NULL
 DROP TABLE [MD_HUB_LINK_XREF]
go

CREATE TABLE [MD_HUB_LINK_XREF]
( 
	[HUB_TABLE_ID]       integer  NOT NULL ,
	[LINK_TABLE_ID]      integer  NOT NULL ,
	[STAGING_AREA_TABLE_ID] integer  NOT NULL ,
	[ROLE]               varchar(100)  NOT NULL ,
	[DRIVING_KEY_INDICATOR] varchar(100)  NULL ,
	[FILTER_CRITERIA]    varchar(100)  NULL 
)
go

ALTER TABLE [MD_HUB_LINK_XREF]
	ADD CONSTRAINT [PK_MD_HUB_LINK_XREF] PRIMARY KEY  CLUSTERED ([HUB_TABLE_ID] ASC,[LINK_TABLE_ID] ASC,[STAGING_AREA_TABLE_ID] ASC,[ROLE] ASC)
go


-- Link
IF OBJECT_ID('[MD_LINK]', 'U') IS NOT NULL
 DROP TABLE [MD_LINK]
go

CREATE TABLE [MD_LINK]
( 
	[LINK_TABLE_ID]      integer  NOT NULL ,
	[LINK_TABLE_NAME]    varchar(100)  NOT NULL 
)
go

ALTER TABLE [MD_LINK]
	ADD CONSTRAINT [PK_MD_LINK] PRIMARY KEY  CLUSTERED ([LINK_TABLE_ID] ASC)
go

CREATE UNIQUE NONCLUSTERED INDEX [IX_MD_LINK] ON [MD_LINK]
( 
	[LINK_TABLE_NAME]     ASC
)
go


-- Sat
IF OBJECT_ID('[MD_SAT]', 'U') IS NOT NULL
 DROP TABLE [MD_SAT]
go

CREATE TABLE [MD_SAT]
( 
	[SATELLITE_TABLE_ID] integer  NOT NULL ,
	[SATELLITE_TABLE_NAME] varchar(100)  NOT NULL ,
	[SATELLITE_TYPE]     varchar(100)  NOT NULL ,
	[STAGING_AREA_TABLE_ID] integer  NOT NULL ,
	[HUB_TABLE_ID]       integer  NOT NULL ,
	[LINK_TABLE_ID]      integer  NOT NULL ,
	[FILTER_CRITERIA]    varchar(4000)  NULL 
)
go

ALTER TABLE [MD_SAT]
	ADD CONSTRAINT [PK_MD_SAT] PRIMARY KEY  CLUSTERED ([SATELLITE_TABLE_ID] ASC)
go



-- Staging
IF OBJECT_ID('[MD_STG]', 'U') IS NOT NULL
 DROP TABLE [MD_STG]
go

CREATE TABLE [MD_STG]
( 
	[STAGING_AREA_TABLE_ID] integer  NOT NULL ,
	[STAGING_AREA_TABLE_NAME] varchar(100)  NOT NULL 
)
go

ALTER TABLE [MD_STG]
	ADD CONSTRAINT [PK_MD_STG] PRIMARY KEY  CLUSTERED ([STAGING_AREA_TABLE_ID] ASC)
go

CREATE UNIQUE NONCLUSTERED INDEX [IX_MD_STG] ON [MD_STG]
( 
	[STAGING_AREA_TABLE_NAME]  ASC
)
go



-- Staging Hub XREF
IF OBJECT_ID('[MD_STG_HUB_XREF]', 'U') IS NOT NULL
 DROP TABLE [MD_STG_HUB_XREF]
go

CREATE TABLE [MD_STG_HUB_XREF]
( 
	[STAGING_AREA_TABLE_ID] integer  NOT NULL ,
	[HUB_TABLE_ID]       integer  NOT NULL ,
	[FILTER_CRITERIA]    varchar(4000)  NULL 
)
go

ALTER TABLE [MD_STG_HUB_XREF]
	ADD CONSTRAINT [PK_MD_STG_HUB_XREF] PRIMARY KEY  CLUSTERED ([STAGING_AREA_TABLE_ID] ASC,[HUB_TABLE_ID] ASC)
go



-- Staging Link Attribute XREF
IF OBJECT_ID('[MD_STG_LINK_ATT_XREF]', 'U') IS NOT NULL
 DROP TABLE [MD_STG_LINK_ATT_XREF]
go

CREATE TABLE [MD_STG_LINK_ATT_XREF]
( 
	[STAGING_AREA_TABLE_ID] integer  NOT NULL ,
	[LINK_TABLE_ID]      integer  NOT NULL ,
	[ATTRIBUTE_ID_FROM]  integer  NOT NULL ,
	[ATTRIBUTE_ID_TO]    integer  NOT NULL 
)
go

ALTER TABLE [MD_STG_LINK_ATT_XREF]
	ADD CONSTRAINT [PK_MD_STG_LINK_ATT_XREF] PRIMARY KEY  CLUSTERED ([STAGING_AREA_TABLE_ID] ASC,[LINK_TABLE_ID] ASC,[ATTRIBUTE_ID_FROM] ASC,[ATTRIBUTE_ID_TO] ASC)
go


-- Staging Attribute XREF
IF OBJECT_ID('[MD_STG_SAT_ATT_XREF]', 'U') IS NOT NULL
 DROP TABLE [MD_STG_SAT_ATT_XREF]
go

CREATE TABLE [MD_STG_SAT_ATT_XREF]
( 
	[STAGING_AREA_TABLE_ID] integer  NOT NULL ,
	[SATELLITE_TABLE_ID] integer  NOT NULL ,
	[ATTRIBUTE_ID_FROM]  integer  NOT NULL ,
	[ATTRIBUTE_ID_TO]    integer  NOT NULL ,
	[MULTI_ACTIVE_KEY_INDICATOR] varchar(100)  NOT NULL 
)
go

ALTER TABLE [MD_STG_SAT_ATT_XREF]
	ADD CONSTRAINT [PK_MD_STG_SAT_ATT_XREF] PRIMARY KEY  CLUSTERED ([STAGING_AREA_TABLE_ID] ASC,[SATELLITE_TABLE_ID] ASC,[ATTRIBUTE_ID_FROM] ASC,[ATTRIBUTE_ID_TO] ASC)
go


-- Table Mapping
IF OBJECT_ID('[MD_TABLE_MAPPING]', 'U') IS NOT NULL
 DROP TABLE [MD_TABLE_MAPPING]
go

CREATE TABLE [MD_TABLE_MAPPING]
( 
	[TABLE_MAPPING_HASH] AS 	(
				CONVERT([CHAR](32),HASHBYTES('MD5',
				ISNULL(RTRIM(CONVERT(VARCHAR(100),[INTEGRATION_AREA_TABLE])),'NA')+'|'+
				ISNULL(RTRIM(CONVERT(VARCHAR(100),[STAGING_AREA_TABLE])),'NA')+'|'+
				ISNULL(RTRIM(CONVERT(VARCHAR(100),[BUSINESS_KEY_ATTRIBUTE])),'NA')+'|'+
				ISNULL(RTRIM(CONVERT(VARCHAR(100),[FILTER_CRITERIA])),'NA')+'|'
			),(2)
			)
		) PERSISTED NOT NULL ,
	[VERSION_ID]         integer  NOT NULL ,
	[STAGING_AREA_TABLE] varchar(100)  NULL ,
	[BUSINESS_KEY_ATTRIBUTE] varchar(4000)  NULL ,
	[INTEGRATION_AREA_TABLE] varchar(100)  NULL ,
	[FILTER_CRITERIA]    varchar(4000)  NULL 
)
go

ALTER TABLE [MD_TABLE_MAPPING]
	ADD CONSTRAINT [PK_MD_TABLE_MAPPING] PRIMARY KEY  CLUSTERED ([TABLE_MAPPING_HASH] ASC,[VERSION_ID] ASC)
go


-- Version
IF OBJECT_ID('[MD_VERSION]', 'U') IS NOT NULL
 DROP TABLE [MD_VERSION]
go

CREATE TABLE [MD_VERSION]
( 
	[VERSION_ID]         integer  NOT NULL  IDENTITY ( 1,1 ) ,
	[VERSION_NAME]       varchar(100)  NOT NULL ,
	[VERSION_NOTES]      varchar(1000)  NULL ,
	[MAJOR_RELEASE_NUMBER] integer  NULL ,
	[MINOR_RELEASE_NUMBER] integer  NULL 
)
go

ALTER TABLE [MD_VERSION]
	ADD CONSTRAINT [PK_MD_VERSION] PRIMARY KEY  CLUSTERED ([VERSION_ID] ASC)
go

CREATE UNIQUE NONCLUSTERED INDEX [IX_MD_VERSION] ON [MD_VERSION]
( 
	[MAJOR_RELEASE_NUMBER]  ASC,
	[MINOR_RELEASE_NUMBER]  ASC
)
go


-- Version Attribute
IF OBJECT_ID('[MD_VERSION_ATTRIBUTE]', 'U') IS NOT NULL
 DROP TABLE [MD_VERSION_ATTRIBUTE]
go

CREATE TABLE [MD_VERSION_ATTRIBUTE]
( 
	[VERSION_ATTRIBUTE_HASH] AS 	(
				CONVERT([CHAR](32),HASHBYTES('MD5',
				ISNULL(RTRIM(CONVERT(VARCHAR(100),[TABLE_NAME])),'NA')+'|'+
				ISNULL(RTRIM(CONVERT(VARCHAR(100),[COLUMN_NAME])),'NA')+'|'+
				ISNULL(RTRIM(CONVERT(VARCHAR(100),[VERSION_ID])),'NA')+'|'
			),(2)
			)
		) PERSISTED NOT NULL ,
	[VERSION_ID]         integer  NOT NULL ,
	[TABLE_NAME]         varchar(100)  NULL ,
	[COLUMN_NAME]        varchar(100)  NOT NULL ,
	[DATA_TYPE]          varchar(100)  NULL ,
	[CHARACTER_MAXIMUM_LENGTH] integer  NULL ,
	[NUMERIC_PRECISION]  integer  NULL ,
	[ORDINAL_POSITION]   integer  NULL ,
	[PRIMARY_KEY_INDICATOR] varchar(1)  NULL ,
	[DRIVING_KEY_INDICATOR] varchar(1)  NULL ,
	[MULTI_ACTIVE_INDICATOR] varchar(1)  NULL 
)
go

ALTER TABLE [MD_VERSION_ATTRIBUTE]
	ADD CONSTRAINT [PK_MD_VERSION_ATTRIBUTE] PRIMARY KEY  CLUSTERED ([VERSION_ATTRIBUTE_HASH] ASC,[VERSION_ID] ASC)
go